clusters:
- connectTimeout: 5s
  edsClusterConfig:
    edsConfig:
      ads: {}
      resourceApiVersion: V3
  ignoreHealthOnHostRemoval: true
  metadata: {}
  name: kube_default_kubernetes_443
  type: EDS
- connectTimeout: 5s
  edsClusterConfig:
    edsConfig:
      ads: {}
      resourceApiVersion: V3
  ignoreHealthOnHostRemoval: true
  metadata: {}
  name: kube_gwtest_extproc_9091
  type: EDS
  typedExtensionProtocolOptions:
    envoy.extensions.upstreams.http.v3.HttpProtocolOptions:
      '@type': type.googleapis.com/envoy.extensions.upstreams.http.v3.HttpProtocolOptions
      explicitHttpConfig:
        http2ProtocolOptions: {}
- connectTimeout: 5s
  edsClusterConfig:
    edsConfig:
      ads: {}
      resourceApiVersion: V3
  ignoreHealthOnHostRemoval: true
  metadata: {}
  name: kube_gwtest_reviews_8080
  type: EDS
endpoints:
- clusterName: kube_gwtest_reviews_8080
  endpoints:
  - lbEndpoints:
    - endpoint:
        address:
          socketAddress:
            address: 10.244.1.11
            portValue: 8080
      loadBalancingWeight: 1
    loadBalancingWeight: 1
    locality:
      region: r1
      subZone: r1z2s3
      zone: r1z2
  - lbEndpoints:
    - endpoint:
        address:
          socketAddress:
            address: 10.244.2.14
            portValue: 8080
      loadBalancingWeight: 1
    loadBalancingWeight: 1
listeners:
- address:
    socketAddress:
      address: '::'
      ipv4Compat: true
      portValue: 8080
  filterChains:
  - filters:
    - name: envoy.filters.network.http_connection_manager
      typedConfig:
        '@type': type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager
        httpFilters:
        - name: jwt/gwtest/jwt-ext
          typedConfig:
            '@type': type.googleapis.com/envoy.extensions.filters.http.jwt_authn.v3.JwtAuthentication
            providers:
              jwt-ext_gwtest_my-example:
                claimToHeaders:
                - claimName: org
                  headerName: x-org
                - claimName: email
                  headerName: x-email
                issuer: https://my.example.com
                localJwks:
                  inlineString: '{"keys":[{"use":"sig","kty":"RSA","alg":"RS256","n":"mXtvzsvqA619Cgw_z4p-M7iz04ZRK9Kcb1l2u-_YY4GXWE2_sCANs3BgbRdnyebB3Q4xyb7w7HWHGQujd-hmV4coSHU6BZFCqCnUUY97wHMCkDJW8F_o_sNjO2kRLc1VkVDEAlYTCGWyzW1w9oyQlIsGngDW9IkV_jpd_WULsXXMxQcpVamJFNF9aqvXRkMEw_3_s5-PrK6KX2xryKx6aeBy9fUsvzIhZuI8qErpBhj0EWIsPPIkpLcF0kxm2vTAkuKO39-i4Gy1t66JqzVwxOvtWzQGnG9ahTAx3dAkxzpQW8tA0l3BhGEpK-0JjoaQEX_MVWK-IvsdbtpcBZi1Sw","e":"AQAB"}]}'
                payloadInMetadata: payload
            requirementMap:
              jwt-ext_gwtest_requirements:
                providerName: jwt-ext_gwtest_my-example
        - name: envoy.filters.http.router
          typedConfig:
            '@type': type.googleapis.com/envoy.extensions.filters.http.router.v3.Router
        mergeSlashes: true
        normalizePath: true
        rds:
          configSource:
            ads: {}
            resourceApiVersion: V3
          routeConfigName: listener~8080
        statPrefix: http
        useRemoteAddress: true
    name: listener~8080
  name: listener~8080
routes:
- ignorePortInHostMatching: true
  name: listener~8080
  virtualHosts:
  - domains:
    - example.com
    name: listener~8080~example_com
    routes:
    - match:
        prefix: /
      name: listener~8080~example_com-route-0-httproute-route-gwtest-0-0-matcher-0
      route:
        cluster: kube_gwtest_reviews_8080
        clusterNotFoundResponseCode: INTERNAL_SERVER_ERROR
      typedPerFilterConfig:
        jwt/gwtest/jwt-ext:
          '@type': type.googleapis.com/envoy.extensions.filters.http.jwt_authn.v3.PerRouteConfig
          requirementName: jwt-ext_gwtest_requirements
