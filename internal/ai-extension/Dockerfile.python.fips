
FROM --platform=$TARGETPLATFORM ubuntu:22.04 as patch

ARG DEBIAN_FRONTEND=noninteractive

RUN apt-get update && apt-get install --no-install-recommends -y patch wget && \
	apt-get clean && rm -rf /var/lib/apt/lists/*

ARG PYTHON_VERSION="3.12.4"

WORKDIR /fips

COPY fips/patches/python_3.12.patch fips.patch
RUN wget --no-check-certificate https://www.python.org/ftp/python/${PYTHON_VERSION}/Python-${PYTHON_VERSION}.tgz \
    && tar -xzf Python-${PYTHON_VERSION}.tgz \
    && cd Python-${PYTHON_VERSION} \
    && patch -p1 < ../fips.patch \
    && cd -

# Main stage
FROM --platform=$TARGETPLATFORM ubuntu:22.04 as build

ARG DEBIAN_FRONTEND=noninteractive
# Must use the latest FIPS compliant OpenSSL version
# Ref: https://openssl-library.org/source/
ARG OPENSSL_VERSION="openssl-3.0.9"
ARG PYTHON_VERSION="3.12.4"

ENV OPENSSL_FIPS=1

WORKDIR /fips

COPY --from=patch /fips/Python-${PYTHON_VERSION} ./Python-${PYTHON_VERSION}

# Install dependencies
RUN apt-get update && apt-get install --no-install-recommends -y \
    wget gcc build-essential checkinstall \
    dpkg-dev \
    libbluetooth-dev \
    libbz2-dev \
    libc6-dev \
    libdb-dev \
    libexpat1-dev \
    libffi-dev \
    libgdbm-dev \
    liblzma-dev \
    libncursesw5-dev \
    libreadline-dev \
    libsqlite3-dev \
    make \
    tk-dev \
    uuid-dev \
    wget \
    xz-utils \
    zlib1g-dev

# Build OpenSSL from source
RUN wget --no-check-certificate https://github.com/openssl/openssl/releases/download/${OPENSSL_VERSION}/${OPENSSL_VERSION}.tar.gz

RUN tar -xzf ${OPENSSL_VERSION}.tar.gz

RUN mkdir -p /etc/ld.so.conf.d \
    && mkdir -p /opt/python-fips \
    && mkdir -p /usr/local/bin

# Allow for libraries to be sourced from /etc/ld.so.conf.d
RUN echo "include /etc/ld.so.conf.d/*.conf"  > /etc/ld.so.conf

# Build and Install OpenSSL from source
RUN cd ${OPENSSL_VERSION} \
    && ./Configure enable-fips shared --prefix=/usr/local/ssl --openssldir=/usr/local/ssl \
    && make \
    && make install \
    && echo "/usr/local/ssl/lib64" > /etc/ld.so.conf.d/${OPENSSL_VERSION}.conf \
    && ln -s -f /usr/local/ssl/bin/openssl /usr/bin/openssl \
    && ln -s -f /usr/local/ssl/bin/openssl /usr/local/bin/openssl \
    && ldconfig -v \
    && cd -

# Use the OpenSSL configuration for FIPS
COPY fips/openssl/openssl3.cnf /usr/local/ssl/openssl.cnf

# Build and Install Python
RUN cd Python-${PYTHON_VERSION} \
    && LDFLAGS="-L/usr/local/lib/ -L/usr/local/lib64/ -L/usr/local/ssl/lib64 -Wl,-rpath=/opt/python-fips/lib" \
    LD_LIBRARY_PATH="/usr/local/ssl/lib64:/usr/local/lib/:/usr/local/lib64/" \
    CPPFLAGS="-I/usr/local/include -I/usr/local/ssl/include -I/usr/local/ssl/include/openssl" \
    ./configure --enable-shared --enable-optimizations --with-builtin-hashlib-hashes=sha1,sha256,sha512,sha3 --prefix=/opt/python-fips --with-openssl=/usr/local/ssl --with-openssl-rpath=/usr/local/ssl/lib64 --with-ssl-default-suites=openssl --with-ensurepip=install \
    && make \
    && make install \
    && echo "/opt/python-fips/lib" > /etc/ld.so.conf.d/python.conf \
    && ldconfig -v \
    && ln -s -f /opt/python-fips/bin/python3.12 /usr/bin/python3 \
    && ln -s -f /opt/python-fips/bin/python3.12 /usr/local/bin/python3 \
    && cd -

# Install Python dependencies
RUN python3 -m pip install wheel \
    && CRYPTOGRAPHY_DONT_BUILD_RUST=1 CFLAGS="-I/usr/local/ssl/include -I/usr/local/ssl/include/openssl" LDFLAGS="-L/usr/local/ssl/lib64" python3 -m pip install cryptography

RUN rm -rf /fips/*