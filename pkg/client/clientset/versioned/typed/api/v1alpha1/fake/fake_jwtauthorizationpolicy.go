// Code generated by client-gen. DO NOT EDIT.

package fake

import (
	gentype "k8s.io/client-go/gentype"

	apiv1alpha1 "github.com/kgateway-dev/kgateway/v2/api/applyconfiguration/api/v1alpha1"
	v1alpha1 "github.com/kgateway-dev/kgateway/v2/api/v1alpha1"
	typedapiv1alpha1 "github.com/kgateway-dev/kgateway/v2/pkg/client/clientset/versioned/typed/api/v1alpha1"
)

// fakeJWTAuthorizationPolicies implements JWTAuthorizationPolicyInterface
type fakeJWTAuthorizationPolicies struct {
	*gentype.FakeClientWithListAndApply[*v1alpha1.JWTAuthorizationPolicy, *v1alpha1.JWTAuthorizationPolicyList, *apiv1alpha1.JWTAuthorizationPolicyApplyConfiguration]
	Fake *FakeGatewayV1alpha1
}

func newFakeJWTAuthorizationPolicies(fake *FakeGatewayV1alpha1, namespace string) typedapiv1alpha1.JWTAuthorizationPolicyInterface {
	return &fakeJWTAuthorizationPolicies{
		gentype.NewFakeClientWithListAndApply[*v1alpha1.JWTAuthorizationPolicy, *v1alpha1.JWTAuthorizationPolicyList, *apiv1alpha1.JWTAuthorizationPolicyApplyConfiguration](
			fake.Fake,
			namespace,
			v1alpha1.SchemeGroupVersion.WithResource("jwtauthorizationpolicies"),
			v1alpha1.SchemeGroupVersion.WithKind("JWTAuthorizationPolicy"),
			func() *v1alpha1.JWTAuthorizationPolicy { return &v1alpha1.JWTAuthorizationPolicy{} },
			func() *v1alpha1.JWTAuthorizationPolicyList { return &v1alpha1.JWTAuthorizationPolicyList{} },
			func(dst, src *v1alpha1.JWTAuthorizationPolicyList) { dst.ListMeta = src.ListMeta },
			func(list *v1alpha1.JWTAuthorizationPolicyList) []*v1alpha1.JWTAuthorizationPolicy {
				return gentype.ToPointerSlice(list.Items)
			},
			func(list *v1alpha1.JWTAuthorizationPolicyList, items []*v1alpha1.JWTAuthorizationPolicy) {
				list.Items = gentype.FromPointerSlice(items)
			},
		),
		fake,
	}
}
