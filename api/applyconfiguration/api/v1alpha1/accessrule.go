// Code generated by applyconfiguration-gen. DO NOT EDIT.

package v1alpha1

// AccessRuleApplyConfiguration represents a declarative configuration of the AccessRule type for use
// with apply.
type AccessRuleApplyConfiguration struct {
	PathPrefixes []string `json:"pathPrefixes,omitempty"`
	Methods      []string `json:"methods,omitempty"`
}

// AccessRuleApplyConfiguration constructs a declarative configuration of the AccessRule type for use with
// apply.
func AccessRule() *AccessRuleApplyConfiguration {
	return &AccessRuleApplyConfiguration{}
}

// WithPathPrefixes adds the given value to the PathPrefixes field in the declarative configuration
// and returns the receiver, so that objects can be build by chaining "With" function invocations.
// If called multiple times, values provided by each call will be appended to the PathPrefixes field.
func (b *AccessRuleApplyConfiguration) WithPathPrefixes(values ...string) *AccessRuleApplyConfiguration {
	for i := range values {
		b.PathPrefixes = append(b.PathPrefixes, values[i])
	}
	return b
}

// WithMethods adds the given value to the Methods field in the declarative configuration
// and returns the receiver, so that objects can be build by chaining "With" function invocations.
// If called multiple times, values provided by each call will be appended to the Methods field.
func (b *AccessRuleApplyConfiguration) WithMethods(values ...string) *AccessRuleApplyConfiguration {
	for i := range values {
		b.Methods = append(b.Methods, values[i])
	}
	return b
}
