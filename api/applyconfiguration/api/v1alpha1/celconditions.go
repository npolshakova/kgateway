// Code generated by applyconfiguration-gen. DO NOT EDIT.

package v1alpha1

// CELConditionsApplyConfiguration represents a declarative configuration of the CELConditions type for use
// with apply.
type CELConditionsApplyConfiguration struct {
	CelMatchExpression []string `json:"matchExpressions,omitempty"`
}

// CELConditionsApplyConfiguration constructs a declarative configuration of the CELConditions type for use with
// apply.
func CELConditions() *CELConditionsApplyConfiguration {
	return &CELConditionsApplyConfiguration{}
}

// WithCelMatchExpression adds the given value to the CelMatchExpression field in the declarative configuration
// and returns the receiver, so that objects can be build by chaining "With" function invocations.
// If called multiple times, values provided by each call will be appended to the CelMatchExpression field.
func (b *CELConditionsApplyConfiguration) WithCelMatchExpression(values ...string) *CELConditionsApplyConfiguration {
	for i := range values {
		b.CelMatchExpression = append(b.CelMatchExpression, values[i])
	}
	return b
}
