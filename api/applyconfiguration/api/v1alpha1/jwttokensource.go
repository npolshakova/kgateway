// Code generated by applyconfiguration-gen. DO NOT EDIT.

package v1alpha1

// JWTTokenSourceApplyConfiguration represents a declarative configuration of the JWTTokenSource type for use
// with apply.
type JWTTokenSourceApplyConfiguration struct {
	HeaderSource []HeaderSourceApplyConfiguration `json:"headers,omitempty"`
	QueryParams  []string                         `json:"queryParams,omitempty"`
}

// JWTTokenSourceApplyConfiguration constructs a declarative configuration of the JWTTokenSource type for use with
// apply.
func JWTTokenSource() *JWTTokenSourceApplyConfiguration {
	return &JWTTokenSourceApplyConfiguration{}
}

// WithHeaderSource adds the given value to the HeaderSource field in the declarative configuration
// and returns the receiver, so that objects can be build by chaining "With" function invocations.
// If called multiple times, values provided by each call will be appended to the HeaderSource field.
func (b *JWTTokenSourceApplyConfiguration) WithHeaderSource(values ...*HeaderSourceApplyConfiguration) *JWTTokenSourceApplyConfiguration {
	for i := range values {
		if values[i] == nil {
			panic("nil value passed to WithHeaderSource")
		}
		b.HeaderSource = append(b.HeaderSource, *values[i])
	}
	return b
}

// WithQueryParams adds the given value to the QueryParams field in the declarative configuration
// and returns the receiver, so that objects can be build by chaining "With" function invocations.
// If called multiple times, values provided by each call will be appended to the QueryParams field.
func (b *JWTTokenSourceApplyConfiguration) WithQueryParams(values ...string) *JWTTokenSourceApplyConfiguration {
	for i := range values {
		b.QueryParams = append(b.QueryParams, values[i])
	}
	return b
}
