// Code generated by applyconfiguration-gen. DO NOT EDIT.

package v1alpha1

// McpFilterApplyConfiguration represents a declarative configuration of the McpFilter type for use
// with apply.
type McpFilterApplyConfiguration struct {
	Type  *string                          `json:"type,omitempty"`
	Match *FilterMatcherApplyConfiguration `json:"match,omitempty"`
}

// McpFilterApplyConfiguration constructs a declarative configuration of the McpFilter type for use with
// apply.
func McpFilter() *McpFilterApplyConfiguration {
	return &McpFilterApplyConfiguration{}
}

// WithType sets the Type field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Type field is set to the value of the last call.
func (b *McpFilterApplyConfiguration) WithType(value string) *McpFilterApplyConfiguration {
	b.Type = &value
	return b
}

// WithMatch sets the Match field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Match field is set to the value of the last call.
func (b *McpFilterApplyConfiguration) WithMatch(value *FilterMatcherApplyConfiguration) *McpFilterApplyConfiguration {
	b.Match = value
	return b
}
