// Code generated by applyconfiguration-gen. DO NOT EDIT.

package v1alpha1

// JWTPrincipalApplyConfiguration represents a declarative configuration of the JWTPrincipal type for use
// with apply.
type JWTPrincipalApplyConfiguration struct {
	Claims []JWTClaimMatchApplyConfiguration `json:"claims,omitempty"`
}

// JWTPrincipalApplyConfiguration constructs a declarative configuration of the JWTPrincipal type for use with
// apply.
func JWTPrincipal() *JWTPrincipalApplyConfiguration {
	return &JWTPrincipalApplyConfiguration{}
}

// WithClaims adds the given value to the Claims field in the declarative configuration
// and returns the receiver, so that objects can be build by chaining "With" function invocations.
// If called multiple times, values provided by each call will be appended to the Claims field.
func (b *JWTPrincipalApplyConfiguration) WithClaims(values ...*JWTClaimMatchApplyConfiguration) *JWTPrincipalApplyConfiguration {
	for i := range values {
		if values[i] == nil {
			panic("nil value passed to WithClaims")
		}
		b.Claims = append(b.Claims, *values[i])
	}
	return b
}
