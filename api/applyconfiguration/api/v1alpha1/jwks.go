// Code generated by applyconfiguration-gen. DO NOT EDIT.

package v1alpha1

import (
	apiv1alpha1 "github.com/kgateway-dev/kgateway/v2/api/v1alpha1"
)

// JWKSApplyConfiguration represents a declarative configuration of the JWKS type for use
// with apply.
type JWKSApplyConfiguration struct {
	Kind       *apiv1alpha1.JWKKind          `json:"kind,omitempty"`
	LocalJwks  *LocalJWKSApplyConfiguration  `json:"localJwks,omitempty"`
	RemoteJwks *RemoteJWKSApplyConfiguration `json:"remoteJwks,omitempty"`
}

// JWKSApplyConfiguration constructs a declarative configuration of the JWKS type for use with
// apply.
func JWKS() *JWKSApplyConfiguration {
	return &JWKSApplyConfiguration{}
}

// WithKind sets the Kind field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Kind field is set to the value of the last call.
func (b *JWKSApplyConfiguration) WithKind(value apiv1alpha1.JWKKind) *JWKSApplyConfiguration {
	b.Kind = &value
	return b
}

// WithLocalJwks sets the LocalJwks field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the LocalJwks field is set to the value of the last call.
func (b *JWKSApplyConfiguration) WithLocalJwks(value *LocalJWKSApplyConfiguration) *JWKSApplyConfiguration {
	b.LocalJwks = value
	return b
}

// WithRemoteJwks sets the RemoteJwks field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the RemoteJwks field is set to the value of the last call.
func (b *JWKSApplyConfiguration) WithRemoteJwks(value *RemoteJWKSApplyConfiguration) *JWKSApplyConfiguration {
	b.RemoteJwks = value
	return b
}
