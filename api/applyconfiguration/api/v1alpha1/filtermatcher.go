// Code generated by applyconfiguration-gen. DO NOT EDIT.

package v1alpha1

// FilterMatcherApplyConfiguration represents a declarative configuration of the FilterMatcher type for use
// with apply.
type FilterMatcherApplyConfiguration struct {
	Exact    *string `json:"exact,omitempty"`
	Prefix   *string `json:"prefix,omitempty"`
	Suffix   *string `json:"suffix,omitempty"`
	Contains *string `json:"contains,omitempty"`
	Regex    *string `json:"regex,omitempty"`
}

// FilterMatcherApplyConfiguration constructs a declarative configuration of the FilterMatcher type for use with
// apply.
func FilterMatcher() *FilterMatcherApplyConfiguration {
	return &FilterMatcherApplyConfiguration{}
}

// WithExact sets the Exact field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Exact field is set to the value of the last call.
func (b *FilterMatcherApplyConfiguration) WithExact(value string) *FilterMatcherApplyConfiguration {
	b.Exact = &value
	return b
}

// WithPrefix sets the Prefix field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Prefix field is set to the value of the last call.
func (b *FilterMatcherApplyConfiguration) WithPrefix(value string) *FilterMatcherApplyConfiguration {
	b.Prefix = &value
	return b
}

// WithSuffix sets the Suffix field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Suffix field is set to the value of the last call.
func (b *FilterMatcherApplyConfiguration) WithSuffix(value string) *FilterMatcherApplyConfiguration {
	b.Suffix = &value
	return b
}

// WithContains sets the Contains field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Contains field is set to the value of the last call.
func (b *FilterMatcherApplyConfiguration) WithContains(value string) *FilterMatcherApplyConfiguration {
	b.Contains = &value
	return b
}

// WithRegex sets the Regex field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Regex field is set to the value of the last call.
func (b *FilterMatcherApplyConfiguration) WithRegex(value string) *FilterMatcherApplyConfiguration {
	b.Regex = &value
	return b
}
