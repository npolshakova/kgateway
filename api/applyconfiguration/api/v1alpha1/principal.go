// Code generated by applyconfiguration-gen. DO NOT EDIT.

package v1alpha1

// PrincipalApplyConfiguration represents a declarative configuration of the Principal type for use
// with apply.
type PrincipalApplyConfiguration struct {
	JWTPrincipals []JWTPrincipalApplyConfiguration `json:"jwt,omitempty"`
}

// PrincipalApplyConfiguration constructs a declarative configuration of the Principal type for use with
// apply.
func Principal() *PrincipalApplyConfiguration {
	return &PrincipalApplyConfiguration{}
}

// WithJWTPrincipals adds the given value to the JWTPrincipals field in the declarative configuration
// and returns the receiver, so that objects can be build by chaining "With" function invocations.
// If called multiple times, values provided by each call will be appended to the JWTPrincipals field.
func (b *PrincipalApplyConfiguration) WithJWTPrincipals(values ...*JWTPrincipalApplyConfiguration) *PrincipalApplyConfiguration {
	for i := range values {
		if values[i] == nil {
			panic("nil value passed to WithJWTPrincipals")
		}
		b.JWTPrincipals = append(b.JWTPrincipals, *values[i])
	}
	return b
}
