// Code generated by applyconfiguration-gen. DO NOT EDIT.

package v1alpha1

import (
	apiv1alpha1 "github.com/kgateway-dev/kgateway/v2/api/v1alpha1"
)

// GatewayExtensionSpecApplyConfiguration represents a declarative configuration of the GatewayExtensionSpec type for use
// with apply.
type GatewayExtensionSpecApplyConfiguration struct {
	Type         *apiv1alpha1.GatewayExtensionType        `json:"type,omitempty"`
	ExtAuth      *ExtAuthProviderApplyConfiguration       `json:"extAuth,omitempty"`
	ExtProc      *ExtProcProviderApplyConfiguration       `json:"extProc,omitempty"`
	RateLimit    *RateLimitProviderApplyConfiguration     `json:"rateLimit,omitempty"`
	JWTProviders map[string]JWTProviderApplyConfiguration `json:"jwtProviders,omitempty"`
}

// GatewayExtensionSpecApplyConfiguration constructs a declarative configuration of the GatewayExtensionSpec type for use with
// apply.
func GatewayExtensionSpec() *GatewayExtensionSpecApplyConfiguration {
	return &GatewayExtensionSpecApplyConfiguration{}
}

// WithType sets the Type field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Type field is set to the value of the last call.
func (b *GatewayExtensionSpecApplyConfiguration) WithType(value apiv1alpha1.GatewayExtensionType) *GatewayExtensionSpecApplyConfiguration {
	b.Type = &value
	return b
}

// WithExtAuth sets the ExtAuth field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the ExtAuth field is set to the value of the last call.
func (b *GatewayExtensionSpecApplyConfiguration) WithExtAuth(value *ExtAuthProviderApplyConfiguration) *GatewayExtensionSpecApplyConfiguration {
	b.ExtAuth = value
	return b
}

// WithExtProc sets the ExtProc field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the ExtProc field is set to the value of the last call.
func (b *GatewayExtensionSpecApplyConfiguration) WithExtProc(value *ExtProcProviderApplyConfiguration) *GatewayExtensionSpecApplyConfiguration {
	b.ExtProc = value
	return b
}

// WithRateLimit sets the RateLimit field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the RateLimit field is set to the value of the last call.
func (b *GatewayExtensionSpecApplyConfiguration) WithRateLimit(value *RateLimitProviderApplyConfiguration) *GatewayExtensionSpecApplyConfiguration {
	b.RateLimit = value
	return b
}

// WithJWTProviders puts the entries into the JWTProviders field in the declarative configuration
// and returns the receiver, so that objects can be build by chaining "With" function invocations.
// If called multiple times, the entries provided by each call will be put on the JWTProviders field,
// overwriting an existing map entries in JWTProviders field with the same key.
func (b *GatewayExtensionSpecApplyConfiguration) WithJWTProviders(entries map[string]JWTProviderApplyConfiguration) *GatewayExtensionSpecApplyConfiguration {
	if b.JWTProviders == nil && len(entries) > 0 {
		b.JWTProviders = make(map[string]JWTProviderApplyConfiguration, len(entries))
	}
	for k, v := range entries {
		b.JWTProviders[k] = v
	}
	return b
}
